service:
  name: serverless-demo
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

# Add the serverless-webpack plugin
plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  region: us-west-2
  timeout: 30
  memorySize: 128
  apiGateway:
    minimumCompressionSize: 1024 # Enable gzip compression for responses > 1 KB
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    # tableName: demo-serverlesss
  iamRoleStatements:
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        - Fn::GetAtt: [ receiverQueue, Arn ]
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        - "arn:aws:dynamodb:us-west-2:*:*"

functions:  
  sender:
      handler: handler.sender
      events:
        - http:
            method: post
            path: sender            

  receiver:
    handler: handler.receiver
    onError: arnQUeue
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - receiverQueue
              - Arn

resources:
  Resources:
    receiverQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: receiverQueue